component provides App requires io.Output out, net.TCPServerSocket,
                                net.TCPSocket, data.json.JSONParser parser,
                                data.StringUtil su,data.DecUtil du {
    void streamHandler(TCPSocket s)
          		{
                out.println("Cliente Aceito")
          		  char lista[] = s.recv(64)
                JSONElement document = parser.parseDocument(lista)
                char idade[] = parser.getValue(document, "idade").value

                dec i = du.decFromString(idade)
                char result[] = null

                if ( i >= 5 && i <= 7){
                    result = "infantil A"
                }
                if ( i >= 8 && i <= 10){
                    result = "infantil B"
                }
                if ( i >= 11 && i <= 13){
                    result = "Juvenil A"
                }
                if ( i >= 14 && i <= 17){
                    result = "Juvenil B"
                }
                if ( i >= 18){
                    result = "adulto"
                }
                //s.send(result)
                out.println("$result")
                s.disconnect()
              }
    int App:main(AppParam params[])
          		{
          		TCPServerSocket host = new TCPServerSocket()
           		host.bind(TCPServerSocket.ANY_ADDRESS, 2020)

          		out.println("Waiting for clients...")

              while (true)
                    {
                    TCPSocket client = new TCPSocket()

                    if (client.accept(host))
                    		asynch::streamHandler(client)
                    }

              return 0
              }
    	}
